# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
    - 'src/**'
    - 'deploy/**'
    - '.github/workflows/deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
    - 'src/**'
    - 'deploy/**'
    - '.github/workflows/deploy.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ResourceGroupName: "ArchitectsConnect"
      ResourceGroupLocation: "westeurope"
      AZURE_WEBAPP_NAME: architectsconnect             # set this to your application's name
      AZURE_WEBAPP_PACKAGE_PATH: './src/SimpleWebApp'  # set this to the path to your web app project, defaults to the repository root
      DOTNET_VERSION: '3.1.301'                        # set this to the dot net version to use

    steps:
    - name: Checkout Main Branch
      uses: actions/checkout@main

    - name: AZ Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create Resource Group
      uses: Azure/CLI@v1
      with:
        inlineScript: |
          #!/bin/bash
          if $(az group exists --name ${{ env.ResourceGroupName }}) ; then
            echo "Azure resource group already exists, skipping creation..."
          else
            az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
            echo "Azure resource group created"
          fi

    - name: Apply ARM Template
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.ResourceGroupName }}
        template: ./deploy/azuredeploy.json

    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
      
    # Run dotnet build and publish
    - name: Dotnet Build and Publish
      run: |
        dotnet restore ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/*.csproj
        dotnet build --configuration Release --no-restore ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/*.csproj
        dotnet publish ${{env.AZURE_WEBAPP_PACKAGE_PATH}}/*.csproj -c Release -o './pkg' 
          
    # Deploy to Azure Web apps
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        package: './pkg'